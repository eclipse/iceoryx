// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file MempoolPubSubTypes.h
 * This header file contains the declaration of the serialization functions.
 *
 * This file was generated by the tool fastcdrgen.
 */


#ifndef _MEMPOOL_MEMPOOL_PUBSUBTYPES_H_
#define _MEMPOOL_MEMPOOL_PUBSUBTYPES_H_

#include <fastrtps/config.h>
#include <fastrtps/TopicDataType.h>

#include "Mempool.h"

#if !defined(GEN_API_VER) || (GEN_API_VER != 1)
#error Generated Mempool is not compatible with current installed Fast-RTPS. Please, regenerate it with fastrtpsgen.
#endif

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif
#else
#define eProsima_user_DllExport
#endif

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(Mempool_SOURCE)
#define Mempool_DllAPI __declspec( dllexport )
#else
#define Mempool_DllAPI __declspec( dllimport )
#endif // Mempool_SOURCE
#else
#define Mempool_DllAPI
#endif
#else
#define Mempool_DllAPI
#endif // _WIN32

namespace Mempool
{

/*!
    * @brief This class represents the TopicDataType of the type Chunk defined by the user in the IDL file.
    * @ingroup MEMPOOL
    */
class ChunkPubSubType : public eprosima::fastrtps::TopicDataType {
public:
    typedef Chunk type;

    eProsima_user_DllExport ChunkPubSubType();

    eProsima_user_DllExport virtual ~ChunkPubSubType();

    eProsima_user_DllExport virtual bool serialize(
        void *data,
        eprosima::fastrtps::rtps::SerializedPayload_t *payload) override;

    eProsima_user_DllExport virtual bool deserialize(
        eprosima::fastrtps::rtps::SerializedPayload_t *payload,
        void *data) override;

    eProsima_user_DllExport virtual std::function<uint32_t()> getSerializedSizeProvider(void* data) override;

    eProsima_user_DllExport virtual bool getKey(
        void *data,
        eprosima::fastrtps::rtps::InstanceHandle_t *ihandle,
        bool force_md5 = false) override;

    eProsima_user_DllExport virtual void* createData() override;

    eProsima_user_DllExport virtual void deleteData(void * data) override;

    MD5 m_md5;

    unsigned char* m_keyBuffer;
};

} // namespace Mempool

#endif // _MEMPOOL_MEMPOOL_PUBSUBTYPES_H_